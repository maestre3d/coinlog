name: Continuous Integration

on:
  workflow_call:
    secrets:
      GH_ACCESS_TOKEN:
        required: false

env:
# Add line if using private modules
#   GOPRIVATE: 'github.com/maestre3d/*'
#   GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  GO111MODULE: 'on'

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Run Go Linter
    strategy:
      matrix:
        go-version: [ 1.18 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          
# ADD line if using private modules
#       - name: Configure private modules
#         run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - name: Run linter
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest

  unit-testing:
    name: Run Unit Tests
    strategy:
      matrix:
        go-version: [ 1.18, 1.19 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

#       - name: Configure private modules
#         run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - name: Run Unit Testing
        run: go test ./... -cover -v

      - name: Generate coverage report
        run: |
          go test `go list ./... | grep -v examples` -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
  integration-testing:
    name: Run Integration Tests
    strategy:
      matrix:
        go-version: [ 1.18, 1.19 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    needs: ['unit-testing']
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: coinlog
          POSTGRES_PASSWORD: root
        ports:
          - 6432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

#       - name: Configure private modules
#         run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - name: Lint migrations
        uses: ariga/atlas-action@v0
        with:
          dir: ent/migrate/migrations
          dir-format: atlas
          dev-url: postgres://postgres:root@localhost:6432/coinlog?sslmode=disable

      - name: Run Integration Testing
        run: go test ./... -tags=integration

  build:
    name: Build artifact
    strategy:
      matrix:
        go-version: [ 1.18, 1.19 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

#       - name: Configure private modules
#         run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - name: Build artifact
        run: go build cmd/http-api/main.go
